{"version":3,"sources":["promises.js"],"names":["posts","title","body","getPosts","setTimeout","output","forEach","post","index","document","innerHTML","createPost","Promise","resolve","reject","push","err","then","catch","console","log","promise1","promise2","promise3","promise4","fetch","res","json","imgUrl","data","thumbnailUrl","all","values","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,QAAQ,CACZ,EAAEC,OAAO,WAAT,EAAsBC,MAAM,mBAA5B,EADY,EAEZ,EAAED,OAAO,WAAT,EAAsBC,MAAM,mBAA5B,EAFY,CAAd;;AAKA,SAASC,QAAT,GAAoB;AAClBC,aAAW,YAAM;AACfC,aAAS,EAAT;AACAL,UAAMM,OAAN,CAAc,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC7BH,yBAAiBE,KAAKN,KAAtB;AACD,KAFD;AAGAQ,aAASP,IAAT,CAAcQ,SAAd,GAA0BL,MAA1B;AACD,GAND,EAMG,IANH;AAOD;;AAED,SAASM,UAAT,CAAoBJ,IAApB,EAA0B;AACxB,SAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,eAAW,YAAM;AACfJ,YAAMe,IAAN,CAAWR,IAAX;AACA,UAAMS,MAAM,KAAZ;AACA,UAAG,CAACA,GAAJ,EAAS;AACPH;AACD,OAFD,MAEO;AACLC,eAAO,4BAAP;AACD;AACF,KARD,EAQG,IARH;AASD,GAVM,CAAP;AAWD;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAH,WAAW,EAAEV,OAAO,UAAT,EAAqBC,MAAM,kBAA3B,EAAX,EACGe,IADH,CACQd,QADR,EAEGe,KAFH,CAES;AAAA,SAAOC,QAAQC,GAAR,CAAYJ,GAAZ,CAAP;AAAA,CAFT;;AAKA,IAAMK,WAAWT,QAAQC,OAAR,CAAgB,aAAhB,CAAjB;AACA,IAAMS,WAAW,EAAjB;AACA,IAAMC,WAAW,IAAIX,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,SAC3BV,WAAWS,OAAX,EAAoB,IAApB,EAA0B,SAA1B,CAD2B;AAAA,CAAZ,CAAjB;AAEA,IAAMW,WAAWC,MAAM,4CAAN,EACdR,IADc,CACT;AAAA,SAAOS,IAAIC,IAAJ,EAAP;AAAA,CADS,EAEdV,IAFc,CAET,gBAAQ;AACZ,SAAOW,SAASC,KAAK,CAAL,EAAQC,YAAxB;AACD,CAJc,CAAjB;;AAMElB,QAAQmB,GAAR,CAAY,CAACV,QAAD,EAAWC,QAAX,EAAqBC,QAArB,EAA+BC,QAA/B,CAAZ,EACGP,IADH,CACQ,UAACe,MAAD;AAAA,SAAYb,QAAQC,GAAR,CAAYY,MAAZ,CAAZ;AAAA,CADR,EAEGf,IAFH,CAEQ,kBAAU;AACdR,WAASwB,cAAT,CAAwB,MAAxB,EAAgCvB,SAAhC,GAA4CkB,MAA5C;AACD,CAJH","file":"promises.4d9c6dcf.map","sourceRoot":"..","sourcesContent":["const posts = [\n  { title: 'Post Four', body: 'This is post four' },\n  { title: 'Post Five', body: 'This is post five' }\n];\n\nfunction getPosts() {\n  setTimeout(() => {\n    output = '';\n    posts.forEach((post, index) => {\n      output += `<li>${post.title}</li>`;\n    });\n    document.body.innerHTML = output;\n  }, 1000);\n}\n\nfunction createPost(post) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      posts.push(post);\n      const err = false;\n      if(!err) {\n        resolve();\n      } else {\n        reject('Error something went wrong');\n      }\n    }, 2000);\n  });\n}\n\n// async function init() {\n//   await createPost({ title: 'Post Six', body: 'This is post six' });\n//\n//   getPosts();\n// }\n// init();\n\n// Async / Await Fetch\n// async function fetchUsers() {\n//   const res = await fetch('http://jsonplaceholder.typicode.com/photos');\n//\n//   const data = await res.json();\n//   console.log(data);\n// }\n//\n// fetchUsers();\n\ncreatePost({ title: 'Post Six', body: 'This is post six' })\n  .then(getPosts)\n  .catch(err => console.log(err));\n\n  \nconst promise1 = Promise.resolve('Hello World');\nconst promise2 = 10;\nconst promise3 = new Promise((resolve, reject) =>\n  setTimeout(resolve, 1000, 'Goodbye'));\nconst promise4 = fetch('http://jsonplaceholder.typicode.com/photos')\n  .then(res => res.json())\n  .then(data => {\n    return imgUrl = data[0].thumbnailUrl;\n  });\n\n  Promise.all([promise1, promise2, promise3, promise4])\n    .then((values) => console.log(values))\n    .then(values => {\n      document.getElementById('text').innerHTML = imgUrl;\n    });\n"]}